#!/usr/bin/python

def usage():
	print """Usage: addclass { <playername> | -i <actorid> } <propertyname> <classname> [class-parameters...]
Add a complete class to an actor object.

Options:
\t-i, --id=<n>\t\tModify actor number <id>
"""

import sys
import getopt

from Player import Player
from Actor import Actor
from Alignment import Alignment
from Database import DB

def retype(value):
	"""Converts the string value into an int, float or string"""
	try:
		r = int(value)
	except:
		try:
			r = float(value)
		except:
			r = str(value)
	return r


try:
	optlist, args = getopt.gnu_getopt(sys.argv[1:], 'h?i:', ['help', 'id='])
except getopt.GetoptError, err:
	print str(err)
	usage()
	sys.exit(1)

aid = None

for o, a in optlist:
	if o in ('-h', '-?', '--help'):
		usage()
		sys.exit(0)
	elif o in ('-i', '--id'):
		aid = int(a)
	else:
		usage()
		sys.exit(0)

if len(args) < 2:
	usage()
	sys.exit(1)

if aid != None:
	p = Actor.load(aid)
else:
	p = Player.load_by_name(args.pop(0))

if p == None:
    print "Player not found"
    sys.exit(1)

classname = args[1]
module = __import__(classname, globals(), locals(), [], -1)
cls = module.__dict__[classname]

params = [ retype(x) for x in args[2:] ]
obj = cls(*params)
p[args[0]] = obj
p.save()

DB.commit()
