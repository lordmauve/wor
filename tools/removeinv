#!/usr/bin/python

"""Remove items from a player's inventory"""

import sys
from optparse import OptionParser

from Player import Player
from Item import Item
from Database import DB
import GameUtil


def remove_item(name, item_class_name, count, target_id):
	"""Removes count instances of the given item from the given player's inventory.
	   Defined as such to simplify refactoring into a UI-driven class"""

	# Get the player
	p = Player.load_by_name(name)

	# Retrieve the item(s) from the player's inventory
	items = p.inventory.take(item_class_name, count)

	# If a target was specified, load it and add the item to it
	if target_id is not None:
		target_container = ItemContainer.load(target_id)
		target_container.add_items(items)
	else:
		for i in items:
			i.destroy()

	# TODO: insert something witty here.  If we were REALLY feeling ambitious,
	#	   we could even have it pick a saying at random from a list
	p.message("A Sourceror appears and smacks you about the head and shoulders.  When your vision clears, the Sourceror (and one of your items) has vanished.", "rodney")
	item_class = Item.get_class(item_class_name)
	p.message("You lose %d %s" % (count, item_class.name_for(count)))

	GameUtil.save()
	GameUtil.flush_cache()
	DB.commit()


parser = OptionParser(usage='%prog [options] <player_name> <item_class>')
parser.add_option('-c', '--count', type='int', default=1, help="Number of items to remove. [Default: %default]")
parser.add_option('-t', '--target', type='int', help="Transfer the item(s) to the given container, instead of destroying them.")

options, args = parser.parse_args()

if len(args) != 2:
	parser.error("Incorrect number of arguments")

player_name, item_class = args
remove_item(player_name, item_class, options.count, options.target)
